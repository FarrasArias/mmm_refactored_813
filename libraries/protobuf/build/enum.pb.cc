// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: enum.proto

#include "enum.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace midi {
}  // namespace midi
static constexpr ::PROTOBUF_NAMESPACE_ID::Metadata* file_level_metadata_enum_2eproto = nullptr;
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_enum_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_enum_2eproto = nullptr;
const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_enum_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_enum_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\nenum.proto\022\004midi*\364!\n\007GM_TYPE\022\007\n\003any\020\000\022"
  "\t\n\005piano\020\001\022\022\n\016chromatic_perc\020\002\022\t\n\005organ\020"
  "\003\022\n\n\006guitar\020\004\022\010\n\004bass\020\005\022\013\n\007strings\020\006\022\014\n\010"
  "ensemble\020\007\022\t\n\005brass\020\010\022\010\n\004reed\020\t\022\010\n\004pipe\020"
  "\n\022\016\n\nsynth_lead\020\013\022\r\n\tsynth_pad\020\014\022\021\n\rsynt"
  "h_effects\020\r\022\n\n\006ethnic\020\016\022\016\n\npercussive\020\017\022"
  "\014\n\010sound_fx\020\020\022\014\n\010no_drums\020\021\022\t\n\005drums\020\022\022\030"
  "\n\024acoustic_grand_piano\020\023\022\031\n\025bright_acous"
  "tic_piano\020\024\022\030\n\024electric_grand_piano\020\025\022\024\n"
  "\020honky_tonk_piano\020\026\022\024\n\020electric_piano_1\020"
  "\027\022\024\n\020electric_piano_2\020\030\022\017\n\013harpsichord\020\031"
  "\022\t\n\005clavi\020\032\022\013\n\007celesta\020\033\022\020\n\014glockenspiel"
  "\020\034\022\r\n\tmusic_box\020\035\022\016\n\nvibraphone\020\036\022\013\n\007mar"
  "imba\020\037\022\r\n\txylophone\020 \022\021\n\rtubular_bells\020!"
  "\022\014\n\010dulcimer\020\"\022\021\n\rdrawbar_organ\020#\022\024\n\020per"
  "cussive_organ\020$\022\016\n\nrock_organ\020%\022\020\n\014churc"
  "h_organ\020&\022\016\n\nreed_organ\020\'\022\r\n\taccordion\020("
  "\022\r\n\tharmonica\020)\022\023\n\017tango_accordion\020*\022\031\n\025"
  "acoustic_guitar_nylon\020+\022\031\n\025acoustic_guit"
  "ar_steel\020,\022\030\n\024electric_guitar_jazz\020-\022\031\n\025"
  "electric_guitar_clean\020.\022\031\n\025electric_guit"
  "ar_muted\020/\022\025\n\021overdriven_guitar\0200\022\025\n\021dis"
  "tortion_guitar\0201\022\024\n\020guitar_harmonics\0202\022\021"
  "\n\racoustic_bass\0203\022\030\n\024electric_bass_finge"
  "r\0204\022\026\n\022electric_bass_pick\0205\022\021\n\rfretless_"
  "bass\0206\022\017\n\013slap_bass_1\0207\022\017\n\013slap_bass_2\0208"
  "\022\020\n\014synth_bass_1\0209\022\020\n\014synth_bass_2\020:\022\n\n\006"
  "violin\020;\022\t\n\005viola\020<\022\t\n\005cello\020=\022\016\n\ncontra"
  "bass\020>\022\023\n\017tremolo_strings\020\?\022\025\n\021pizzicato"
  "_strings\020@\022\023\n\017orchestral_harp\020A\022\013\n\007timpa"
  "ni\020B\022\025\n\021string_ensemble_1\020C\022\025\n\021string_en"
  "semble_2\020D\022\023\n\017synth_strings_1\020E\022\023\n\017synth"
  "_strings_2\020F\022\016\n\nchoir_aahs\020G\022\016\n\nvoice_oo"
  "hs\020H\022\017\n\013synth_voice\020I\022\021\n\rorchestra_hit\020J"
  "\022\013\n\007trumpet\020K\022\014\n\010trombone\020L\022\010\n\004tuba\020M\022\021\n"
  "\rmuted_trumpet\020N\022\017\n\013french_horn\020O\022\021\n\rbra"
  "ss_section\020P\022\021\n\rsynth_brass_1\020Q\022\021\n\rsynth"
  "_brass_2\020R\022\017\n\013soprano_sax\020S\022\014\n\010alto_sax\020"
  "T\022\r\n\ttenor_sax\020U\022\020\n\014baritone_sax\020V\022\010\n\004ob"
  "oe\020W\022\020\n\014english_horn\020X\022\013\n\007bassoon\020Y\022\014\n\010c"
  "larinet\020Z\022\013\n\007piccolo\020[\022\t\n\005flute\020\\\022\014\n\010rec"
  "order\020]\022\r\n\tpan_flute\020^\022\020\n\014blown_bottle\020_"
  "\022\016\n\nshakuhachi\020`\022\013\n\007whistle\020a\022\013\n\007ocarina"
  "\020b\022\021\n\rlead_1_square\020c\022\023\n\017lead_2_sawtooth"
  "\020d\022\023\n\017lead_3_calliope\020e\022\020\n\014lead_4_chiff\020"
  "f\022\022\n\016lead_5_charang\020g\022\020\n\014lead_6_voice\020h\022"
  "\021\n\rlead_7_fifths\020i\022\025\n\021lead_8_bass__lead\020"
  "j\022\021\n\rpad_1_new_age\020k\022\016\n\npad_2_warm\020l\022\023\n\017"
  "pad_3_polysynth\020m\022\017\n\013pad_4_choir\020n\022\017\n\013pa"
  "d_5_bowed\020o\022\022\n\016pad_6_metallic\020p\022\016\n\npad_7"
  "_halo\020q\022\017\n\013pad_8_sweep\020r\022\r\n\tfx_1_rain\020s\022"
  "\023\n\017fx_2_soundtrack\020t\022\020\n\014fx_3_crystal\020u\022\023"
  "\n\017fx_4_atmosphere\020v\022\023\n\017fx_5_brightness\020w"
  "\022\020\n\014fx_6_goblins\020x\022\017\n\013fx_7_echoes\020y\022\017\n\013f"
  "x_8_sci_fi\020z\022\t\n\005sitar\020{\022\t\n\005banjo\020|\022\014\n\010sh"
  "amisen\020}\022\010\n\004koto\020~\022\013\n\007kalimba\020\177\022\r\n\010bag_p"
  "ipe\020\200\001\022\013\n\006fiddle\020\201\001\022\013\n\006shanai\020\202\001\022\020\n\013tink"
  "le_bell\020\203\001\022\n\n\005agogo\020\204\001\022\020\n\013steel_drums\020\205\001"
  "\022\016\n\twoodblock\020\206\001\022\017\n\ntaiko_drum\020\207\001\022\020\n\013mel"
  "odic_tom\020\210\001\022\017\n\nsynth_drum\020\211\001\022\023\n\016reverse_"
  "cymbal\020\212\001\022\026\n\021guitar_fret_noise\020\213\001\022\021\n\014bre"
  "ath_noise\020\214\001\022\r\n\010seashore\020\215\001\022\017\n\nbird_twee"
  "t\020\216\001\022\023\n\016telephone_ring\020\217\001\022\017\n\nhelicopter\020"
  "\220\001\022\r\n\010applause\020\221\001\022\014\n\007gunshot\020\222\001\022\013\n\006drum_"
  "0\020\223\001\022\013\n\006drum_1\020\224\001\022\013\n\006drum_2\020\225\001\022\013\n\006drum_3"
  "\020\226\001\022\013\n\006drum_4\020\227\001\022\013\n\006drum_5\020\230\001\022\013\n\006drum_6\020"
  "\231\001\022\013\n\006drum_7\020\232\001\022\013\n\006drum_8\020\233\001\022\013\n\006drum_9\020\234"
  "\001\022\014\n\007drum_10\020\235\001\022\014\n\007drum_11\020\236\001\022\014\n\007drum_12"
  "\020\237\001\022\014\n\007drum_13\020\240\001\022\014\n\007drum_14\020\241\001\022\014\n\007drum_"
  "15\020\242\001\022\014\n\007drum_16\020\243\001\022\014\n\007drum_17\020\244\001\022\014\n\007dru"
  "m_18\020\245\001\022\014\n\007drum_19\020\246\001\022\014\n\007drum_20\020\247\001\022\014\n\007d"
  "rum_21\020\250\001\022\014\n\007drum_22\020\251\001\022\014\n\007drum_23\020\252\001\022\014\n"
  "\007drum_24\020\253\001\022\014\n\007drum_25\020\254\001\022\014\n\007drum_26\020\255\001\022"
  "\014\n\007drum_27\020\256\001\022\014\n\007drum_28\020\257\001\022\014\n\007drum_29\020\260"
  "\001\022\014\n\007drum_30\020\261\001\022\014\n\007drum_31\020\262\001\022\014\n\007drum_32"
  "\020\263\001\022\014\n\007drum_33\020\264\001\022\014\n\007drum_34\020\265\001\022\014\n\007drum_"
  "35\020\266\001\022\014\n\007drum_36\020\267\001\022\014\n\007drum_37\020\270\001\022\014\n\007dru"
  "m_38\020\271\001\022\014\n\007drum_39\020\272\001\022\014\n\007drum_40\020\273\001\022\014\n\007d"
  "rum_41\020\274\001\022\014\n\007drum_42\020\275\001\022\014\n\007drum_43\020\276\001\022\014\n"
  "\007drum_44\020\277\001\022\014\n\007drum_45\020\300\001\022\014\n\007drum_46\020\301\001\022"
  "\014\n\007drum_47\020\302\001\022\014\n\007drum_48\020\303\001\022\014\n\007drum_49\020\304"
  "\001\022\014\n\007drum_50\020\305\001\022\014\n\007drum_51\020\306\001\022\014\n\007drum_52"
  "\020\307\001\022\014\n\007drum_53\020\310\001\022\014\n\007drum_54\020\311\001\022\014\n\007drum_"
  "55\020\312\001\022\014\n\007drum_56\020\313\001\022\014\n\007drum_57\020\314\001\022\014\n\007dru"
  "m_58\020\315\001\022\014\n\007drum_59\020\316\001\022\014\n\007drum_60\020\317\001\022\014\n\007d"
  "rum_61\020\320\001\022\014\n\007drum_62\020\321\001\022\014\n\007drum_63\020\322\001\022\014\n"
  "\007drum_64\020\323\001\022\014\n\007drum_65\020\324\001\022\014\n\007drum_66\020\325\001\022"
  "\014\n\007drum_67\020\326\001\022\014\n\007drum_68\020\327\001\022\014\n\007drum_69\020\330"
  "\001\022\014\n\007drum_70\020\331\001\022\014\n\007drum_71\020\332\001\022\014\n\007drum_72"
  "\020\333\001\022\014\n\007drum_73\020\334\001\022\014\n\007drum_74\020\335\001\022\014\n\007drum_"
  "75\020\336\001\022\014\n\007drum_76\020\337\001\022\014\n\007drum_77\020\340\001\022\014\n\007dru"
  "m_78\020\341\001\022\014\n\007drum_79\020\342\001\022\014\n\007drum_80\020\343\001\022\014\n\007d"
  "rum_81\020\344\001\022\014\n\007drum_82\020\345\001\022\014\n\007drum_83\020\346\001\022\014\n"
  "\007drum_84\020\347\001\022\014\n\007drum_85\020\350\001\022\014\n\007drum_86\020\351\001\022"
  "\014\n\007drum_87\020\352\001\022\014\n\007drum_88\020\353\001\022\014\n\007drum_89\020\354"
  "\001\022\014\n\007drum_90\020\355\001\022\014\n\007drum_91\020\356\001\022\014\n\007drum_92"
  "\020\357\001\022\014\n\007drum_93\020\360\001\022\014\n\007drum_94\020\361\001\022\014\n\007drum_"
  "95\020\362\001\022\014\n\007drum_96\020\363\001\022\014\n\007drum_97\020\364\001\022\014\n\007dru"
  "m_98\020\365\001\022\014\n\007drum_99\020\366\001\022\r\n\010drum_100\020\367\001\022\r\n\010"
  "drum_101\020\370\001\022\r\n\010drum_102\020\371\001\022\r\n\010drum_103\020\372"
  "\001\022\r\n\010drum_104\020\373\001\022\r\n\010drum_105\020\374\001\022\r\n\010drum_"
  "106\020\375\001\022\r\n\010drum_107\020\376\001\022\r\n\010drum_108\020\377\001\022\r\n\010"
  "drum_109\020\200\002\022\r\n\010drum_110\020\201\002\022\r\n\010drum_111\020\202"
  "\002\022\r\n\010drum_112\020\203\002\022\r\n\010drum_113\020\204\002\022\r\n\010drum_"
  "114\020\205\002\022\r\n\010drum_115\020\206\002\022\r\n\010drum_116\020\207\002\022\r\n\010"
  "drum_117\020\210\002\022\r\n\010drum_118\020\211\002\022\r\n\010drum_119\020\212"
  "\002\022\r\n\010drum_120\020\213\002\022\r\n\010drum_121\020\214\002\022\r\n\010drum_"
  "122\020\215\002\022\r\n\010drum_123\020\216\002\022\r\n\010drum_124\020\217\002\022\r\n\010"
  "drum_125\020\220\002\022\r\n\010drum_126\020\221\002\022\r\n\010drum_127\020\222"
  "\002"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_enum_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_enum_2eproto_sccs[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_enum_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_enum_2eproto = {
  false, false, descriptor_table_protodef_enum_2eproto, "enum.proto", 4361,
  &descriptor_table_enum_2eproto_once, descriptor_table_enum_2eproto_sccs, descriptor_table_enum_2eproto_deps, 0, 0,
  schemas, file_default_instances, TableStruct_enum_2eproto::offsets,
  file_level_metadata_enum_2eproto, 0, file_level_enum_descriptors_enum_2eproto, file_level_service_descriptors_enum_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_enum_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_enum_2eproto)), true);
namespace midi {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GM_TYPE_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_enum_2eproto);
  return file_level_enum_descriptors_enum_2eproto[0];
}
bool GM_TYPE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 91:
    case 92:
    case 93:
    case 94:
    case 95:
    case 96:
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 123:
    case 124:
    case 125:
    case 126:
    case 127:
    case 128:
    case 129:
    case 130:
    case 131:
    case 132:
    case 133:
    case 134:
    case 135:
    case 136:
    case 137:
    case 138:
    case 139:
    case 140:
    case 141:
    case 142:
    case 143:
    case 144:
    case 145:
    case 146:
    case 147:
    case 148:
    case 149:
    case 150:
    case 151:
    case 152:
    case 153:
    case 154:
    case 155:
    case 156:
    case 157:
    case 158:
    case 159:
    case 160:
    case 161:
    case 162:
    case 163:
    case 164:
    case 165:
    case 166:
    case 167:
    case 168:
    case 169:
    case 170:
    case 171:
    case 172:
    case 173:
    case 174:
    case 175:
    case 176:
    case 177:
    case 178:
    case 179:
    case 180:
    case 181:
    case 182:
    case 183:
    case 184:
    case 185:
    case 186:
    case 187:
    case 188:
    case 189:
    case 190:
    case 191:
    case 192:
    case 193:
    case 194:
    case 195:
    case 196:
    case 197:
    case 198:
    case 199:
    case 200:
    case 201:
    case 202:
    case 203:
    case 204:
    case 205:
    case 206:
    case 207:
    case 208:
    case 209:
    case 210:
    case 211:
    case 212:
    case 213:
    case 214:
    case 215:
    case 216:
    case 217:
    case 218:
    case 219:
    case 220:
    case 221:
    case 222:
    case 223:
    case 224:
    case 225:
    case 226:
    case 227:
    case 228:
    case 229:
    case 230:
    case 231:
    case 232:
    case 233:
    case 234:
    case 235:
    case 236:
    case 237:
    case 238:
    case 239:
    case 240:
    case 241:
    case 242:
    case 243:
    case 244:
    case 245:
    case 246:
    case 247:
    case 248:
    case 249:
    case 250:
    case 251:
    case 252:
    case 253:
    case 254:
    case 255:
    case 256:
    case 257:
    case 258:
    case 259:
    case 260:
    case 261:
    case 262:
    case 263:
    case 264:
    case 265:
    case 266:
    case 267:
    case 268:
    case 269:
    case 270:
    case 271:
    case 272:
    case 273:
    case 274:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace midi
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
